# docker-compose.yml for connecting to EXISTING services
version: '3.8'

services:
  leftplot-backend:
    build: 
      context: .
      target: production
    ports:
      # Exposes your app on port 9294 of the server running Docker
      - "9294:9294"
    environment:
      # This tells the app inside the container which port to listen on.
      # The rest of your secrets (DB_HOST, etc.) will come from the .env.production file.
      - NODE_ENV=production
      - PORT=9294
      - DB_HOST=postgres
      - DB_USER=your-db-user
      - DB_NAME=your-db-name
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379
      # Add your environment variables here or use .env file
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_SECURE=${SMTP_SECURE}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - SMTP_FROM=${SMTP_FROM}
      - FRONTEND_URL=${FRONTEND_URL}
      - JWT_SECRET=${JWT_SECRET}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    restart: unless-stopped
    depends_on:
      - db-init

  db-init:
    image: postgres:15
    environment:
      - POSTGRES_USER=your-db-user
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=your-db-name
    volumes:
      - ./db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    command: ["postgres", "-c", "max_connections=100"]
    restart: "no"

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
